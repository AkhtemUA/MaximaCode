@c -*-texinfo-*-

@c
@c versao pt_BR baseada no md5sum abaixo:
@c 4204953b9bb6bfaf9ff1c46e05fbe590  include-maxima.texi.in
@c

@c 2000-04-17 Jim Van Zandt <jrv@vanzandt.mv.com> Added header,
@c info directory entry, reference to introduction chapter, and menu
@c descriptions.  Rearranged chapters.

@c to update the menus do: 
@c (texinfo-multiple-files-update "maxima.texi" t t)
@c
@c texinfo-multiple-files-update will delete the detailed node listing!


@c %**start of header
@synindex vr fn
@synindex cp fn
@settitle Manual do Maxima @VERSION@
@c %**end of header
@setchapternewpage odd
@ifinfo
Esse @'{e} um Manual do Maxima no formato Texinfo

Copyright 1994,2001 William F. Schelter

@format
INFO-DIR-SECTION Math
START-INFO-DIR-ENTRY
* Maxima: (maxima).     Um sistema de computa@,{c}@~{a}o alg@'{e}brica.
END-INFO-DIR-ENTRY
@end format
@end ifinfo

@ifinfo 
@macro var {expr}
<\expr\>
@end macro
@end ifinfo

@include category-macros.texi

@titlepage
@sp 10
@comment The title is printed in a large font.
@center @titlefont{Manual do Maxima}
@center Ver. @VERSION@
@page
@vskip 0pt plus 1filll
Maxima @'{e} um sistema de computa@,{c}@~{a}o alg@'{e}brica, implementado em Lisp.

Maxima @'{e} derivado do sistema Macsyma,
desenvolvido no MIT entre os anos de 1968 a 1982 como parte do Projeto MAC.
MIT enviou uma cópia do código fonte do Macsyma ao "Department of Energy"
em 1982; aquela versão do Maxima é agora conhecida como "DOE Macsyma".
Uma cópia do "DOE Macsyma" era mantida pelo Professor William F. Schelter
da Universidade do Texas de 1982 até sua morte em 2001.
Em 1998, Schelter obteve permissão do "Department of Energy"
para liberar o código fonte do "DOE Macsyma" sob a "GNU Public License",
e em 2000 ele iniciou o projeto Maxima no SourceForge para manter
e desenvolver o "DOE Macsyma", agora chamado Maxima.

@end titlepage

@summarycontents
@contents

@ifnottex
@node Top, Introduction to Maxima, (dir), (dir)
@top

Maxima @'{e} um sistema de computa@,{c}@~{a}o alg@'{e}brica, implementado em Lisp.

Maxima @'{e} derivado do sistema Macsyma,
desenvolvido no MIT entre os anos de 1968 a 1982 como parte do Projeto MAC.
MIT enviou uma cópia do código fonte do Macsyma ao "Department of Energy"
em 1982; aquela versão do Maxima é agora conhecida como "DOE Macsyma".
Uma cópia do "DOE Macsyma" era mantida pelo Professor William F. Schelter
da Universidade do Texas de 1982 até sua morte em 2001.
Em 1998, Schelter obteve permissão do "Department of Energy"
para liberar o código fonte do "DOE Macsyma" sob a "GNU Public License",
e em 2000 ele iniciou o projeto Maxima no SourceForge para manter
e desenvolver o "DOE Macsyma", agora chamado Maxima.
@end ifnottex

@c includes

@menu

@b{Infraestrutura do Maxima}

* Introduction to Maxima::      Amostras de sessões Maxima.
* Bug Detection and Reporting:: Encontrando e informando erros no Maxima.
* Help::                        Obtendo ajuda dentro de uma sessão do Maxima.
* Command Line::                Sintaxe de linha de comando do Maxima, Entrada, e Saída.
* Data Types and Structures::   Números, Sequências de caracteres, Listas, Vetores estáticos, e Estruturas.
* Expressions::                 Expressões no Maxima.
* Operators::                   Operadores usados em expressões do Maxima.
* Evaluation::                  Avaliando expressões.
* Simplification::              Simplificando expressões.
* Mathematical Functions::      Funções matemáticas no Maxima.
* Maximas Database::            Declarações, Contextos, Fatos, e Propriedades.
* Plotting::                    2D e 3D - saída gráfica.
* File Input and Output::       Entrada e saída de arquivos.

Suporte a áreas específicas da matemática
* Polynomials::                 Formas padrão para polinômios, e funções atuando sobre eles.
* Special Functions::           Funções especiais
* Elliptic Functions::          Funções elípticas e integrais
* Limits::                      Limites de expressões.
* Differentiation::             Cálculo diferencial.
* Integration::                 Cálculo integral.
* Equations::                   Definindo e resolvendo equações.
* Differential Equations::      Definindo e resolvendo equações diferenciais.
* Numerical::                   Integração numérica, Fourier, transformadas, Equações, EDO's, etc.
* Matrices and Linear Algebra:: Operações sobre matrizes.
* Affine::                      
* itensor::                     Trabalhando sobre índices de tensores.
* ctensor::                     Trabalhando sobre componentes de Tensores.
* atensor::                     Trabalhando sobre tensores algébricos.
* Sums Products and Series::    Somatórios, Produtos, Séries de Taylor e de potências.
* Number Theory::               Teoria dos números.
* Symmetries::                  
* Groups::                      Álgebra abstrata.

Recursos avançados e programação
* Runtime Environment::         Personalização do ambiente do Maxima.
* Miscellaneous Options::       Opções que afetam todo o comportamento do Maxima.
* Rules and Patterns::          Máscaras de busca e regras de simplificação definidas pelo usuário.
* Sets::                        Trabalhando sobre conjuntos.
* Function Definition::         Definindo funções.
* Program Flow::                Programando para Maxima.
* Debugging::                   Depurando programas do Maxima.

Pacotes adicionais
* asympa::                      Pacote de análise assintótica
* augmented_lagrangian::        pacote augmented_lagrangian.
* Bernstein::                   Polinômios de Bernstein.
* bode::                        Bode gain and phase plots.
* cobyla::                      Nonlinear optimization with inequality constraints.
* contrib_ode::                 Rotinas adicionais para EDOs
* descriptive::                 Estatística descritiva.
* diag::                        Matrizes de Jordan.
* distrib::                     Distribuição de probabilidade.
* draw::                        Trabalhando com Maxima e Gnuplot.
* drawdf::                      Campos de direção com Gnuplot.
* dynamics::                    Gráficos para sistemas dinâmicos e fractais.
* ezunits::                     Quantidades dimensionais.
* f90::                         Tradutor de Maxima para fortran.
* finance::                     Pacote financeiro.
* fractals::                    Fractais.
* ggf::                         Gerando funções de sequências.
* graphs::                      Pacote para teoria dos grafos.
* grobner::                     Funçòes para trabalhar com bases de Groebner.
* impdiff::                     Derivação implícita.
* interpol::                    Pacote de interpolação.
* lapack::                      Funções LAPACK para álgebra linear.
* lbfgs::                       Pacote L-BFGS de minimização não limitada.
* lindstedt::                   Pacote Lindstedt.
* linearalgebra::               Funções para álgebra linear.
* lsquares::                    Mínimos quadrados.
* makeOrders::                  Utilitário Polinomial.
* minpack::                     Funções para minimização e raízes
* mnewton::                     Método de Newton.
* numericalio::                 Lendo e escrevendo arquivos.
* opsubst::                     Utilitário de substituições.
* orthopoly::                   Polinômios ortogonais.
* romberg::                     Método de Romberg para integração numérica.
* simplex::                     Programação linear.
* simplification::              Regras de simplificação e funções.
* solve_rec::                   Recorrências lineares.
* stats::                       Pacote de inferência estatística.
* stirling::                    Fórmula de Stirling.
* stringproc::                  Tratamento de sequências de caracteres.
* to_poly_solve::               Pacote to_poly_solve.
* unit::                        Pacote de dimensões e unidades.
* zeilberger::                  Funções para somatórios hipergeométricos.

Índice
* Function and Variable Index:: Índice.

@comment @detailmenu
 --- Lista Detalhada de Nodos ---

Introdução
* Introduction to Maxima::

Erros
* Bug Detection and Reporting::

Ajuda
* Documentation::
* Functions and Variables for Help::

Linha de Comando
* Introduction to Command Line::
* Functions and Variables for Command Line::
* Functions and Variables for Display::

Tipos de Dados e Estruturas
* Numbers::
* Strings::
* Constants::
* Lists::
* Arrays::
* Structures::

Expressões
* Introduction to Expressions::
* Nouns and Verbs::
* Identifiers::
* Inequality::
* Functions and Variables for Expressions::

Operadores
* Introduction to operators::
* Arithmetic operators::
* Relational operators::
* Logical operators::
* Operators for Equations::
* Assignment operators::
* User defined operators::

Avaliação
* Functions and Variables for Evaluation::

Simplificação
* Functions and Variables for Simplification::

Funções Matemáticas
* Functions for Numbers::
* Functions for Complex Numbers::
* Combinatorial Functions::
* Root Exponential and Logarithmic Functions::
* Trigonometric Functions::
* Random Numbers::

Base de dados do Maxima
* Introduction to Maximas Database::
* Functions and Variables for Properties::
* Functions and Variables for Facts::
* Functions and Variables for Predicates::

Montando Gráficos
* Introduction to Plotting::
* Plotting Formats::
* Functions and Variables for Plotting::    
* Plotting Options::
* Gnuplot Options::
* Gnuplot_pipes Format Functions::

Entrada e Saída de Arquivos
* Comments::
* Files::
* Functions and Variables for File Input and Output::
* Functions and Variables for TeX Output::
* Functions and Variables for Fortran Output::

Polinomios
* Introduction to Polynomials::  
* Functions and Variables for Polynomials::

Funções Especiais
* Introduction to Special Functions:: 
* Bessel Functions::
* Airy Functions::
* Gamma and factorial Functions::
* Exponential Integrals::
* Error Function::
* Struve Functions::
* Hypergeometric Functions::
* Parabolic Cylinder Functions::
* Functions and Variables for Special Functions::  

Funções Elípticas
* Introduction to Elliptic Functions and Integrals::
* Functions and Variables for Elliptic Functions::
* Functions and Variables for Elliptic Integrals::

Limites
* Functions and Variables for Limits::      

Diferenciação
* Functions and Variables for Differentiation::  

Integração
* Introduction to Integration::  
* Functions and Variables for Integration::  

Equações
* Functions and Variables for Equations::   

Equações diferencias
* Introduction to Differential Equations::  
* Functions and Variables for Differential Equations::  

Numerical
* Introduction to fast Fourier transform::                     
* Functions and Variables for fast Fourier transform::
* Functions for numerical solution of equations::
* Introduction to numerical solution of differential equations::
* Functions for numerical solution of differential equations::

Matrizes e Álgebra Linear
* Introduction to Matrices and Linear Algebra::  
* Dot::                         
* Vectors::                     
* eigen::
* Functions and Variables for Matrices and Linear Algebra::  

Affine
* Introduction to Affine::
* Functions and Variables for Affine::      

itensor
* Introduction to itensor::      
* Functions and Variables for itensor::      

ctensor
* Introduction to ctensor::     
* Functions and Variables for ctensor::     

atensor
* Introduction to atensor::     
* Functions and Variables for atensor::     

Somatórios, Produtos Séries
* Functions and Variables for Sums and Products::
* Introduction to Series::
* Functions and Variables for Series::
* Introduction to Fourier series::
* Functions and Variables for Fourier series::

Teoria dos Números
* Functions and Variables for Number Theory::  

Simetrias
* Introduction to Symmetries::
* Functions and Variables for Symmetries::  

Grupos
* Functions and Variables for Groups::      

Ambiente de Execução
* Introduction for Runtime Environment::  
* Interrupts::                  
* Functions and Variables for Runtime Environment::  

Opções Diversas
* Introduction to Miscellaneous Options::  
* Share::                       
* Functions and Variables for Miscellaneous Options::  

Regras e Modelos
* Introduction to Rules and Patterns::  
* Functions and Variables for Rules and Patterns::

Conjuntos
* Introduction to Sets::       
* Functions and Variables for Sets::

Definição de Função
* Introduction to Function Definition::  
* Function::                    
* Macros::                      
* Functions and Variables for Function Definition::  

Fluxo de Programa
* Lisp and Maxima::
* Garbage Collection::
* Introduction to Program Flow::  
* Functions and Variables for Program Flow::  

Depurando
* Functions and Variables for Debugging::   

asympa
* Introduction to asympa::
* Functions and variables for asympa::

augmented_lagrangian
* Functions and Variables for augmented_lagrangian::

Bernstein
* Functions and Variables for Bernstein::

bode
* Functions and Variables for bode::

cobyla
* Introduction to cobyla::
* Functions and Variables for cobyla::
* Examples for cobyla::

contrib_ode
* Introduction to contrib_ode::
* Functions and Variables for contrib_ode::
* Possible improvements to contrib_ode::
* Test cases for contrib_ode::
* References for contrib_ode::

descriptive
* Introduction to descriptive::
* Functions and Variables for data manipulation::
* Functions and Variables for descriptive statistics::
* Functions and Variables for statistical graphs::

diag
* Functions and Variables for diag::

distrib
* Introduction to distrib::
* Functions and Variables for continuous distributions::
* Functions and Variables for discrete distributions::

draw
* Introduction to draw::
* Functions and Variables for draw::
* Functions and Variables for pictures::
* Functions and Variables for worldmap::

drawdf
* Introduction to drawdf::
* Functions and Variables for drawdf::

dynamics
* Introduction to dynamics::
* Functions and Variables for dynamics::

ezunits
* Introduction to ezunits::
* Introduction to physical_constants::
* Functions and Variables for ezunits::

f90
* Functions and Variables for f90::

finance
* Introduction to finance::
* Functions and Variables for finance::

fractals
* Introduction to fractals::
* Definitions for IFS fractals::
* Definitions for complex fractals::
* Definitions for Koch snowflakes::
* Definitions for Peano maps::

ggf
* Functions and Variables for ggf::

graphs
* Introduction to graphs::
* Functions and Variables for graphs::

grobner
* Introduction to grobner::
* Functions and Variables for grobner::

impdiff
* Functions and Variables for impdiff::

interpol
* Introduction to interpol::
* Functions and Variables for interpol::

lapack
* Introduction to lapack::
* Functions and Variables for lapack::

lbfgs
* Introduction to lbfgs::
* Functions and Variables for lbfgs::

lindstedt
* Functions and Variables for lindstedt::

linearalgebra
* Introduction to linearalgebra::
* Functions and Variables for linearalgebra::

lsquares
* Introduction to lsquares::
* Functions and Variables for lsquares::

makeOrders
* Functions and Variables for makeOrders::

minpack
* Introduction to minpack::
* Functions and Variables for minpack::

mnewton
* Introduction to mnewton::
* Functions and Variables for mnewton::

numericalio
* Introduction to numericalio::
* Functions and Variables for plain-text input and output::
* Functions and Variables for binary input and output::

opsubst
* Functions and Variables for opsubst::

orthopoly
* Introduction to orthogonal polynomials::
* Functions and Variables for orthogonal polynomials::

romberg
* Functions and Variables for romberg::

simplex
* Introduction to simplex::
* Functions and Variables for simplex::

simplification
* Introduction to simplification::
* Package absimp::
* Package facexp::
* Package functs::
* Package ineq::
* Package rducon::
* Package scifac::
* Package sqdnst::

solve_rec
* Introduction to solve_rec::
* Functions and Variables for solve_rec::

stats
* Introduction to stats::
* Functions and Variables for inference_result::
* Functions and Variables for stats::
* Functions and Variables for special distributions::

stirling
* Functions and Variables for stirling::

stringproc
* Introduction to string processing::
* Functions and Variables for input and output::
* Functions and Variables for characters::
* Functions and Variables for strings::

to_poly_solve
* Functions and Variables for to_poly_solve::

unit
* Introduction to Units::       
* Functions and Variables for Units::

zeilberger
* Introduction to zeilberger::
* Functions and Variables for zeilberger::

@comment @end detailmenu
@end menu

@c  Put the @node lines here, rather than in the @included files,
@c  so emacs can automatically update them with C-c C-u C-e.
@c  nota bene: C-c C-u C-a and texinfo-multiple-files-update will delete
@c  the detailed node listing!

@node Introduction to Maxima, Bug Detection and Reporting, Top, Top
@chapter Introduction to Maxima
@include Introduction.texi

@node Bug Detection and Reporting, Help, Introduction to Maxima, Top
@chapter Bug Detection and Reporting
@include Bugs.texi

@node Help, Command Line, Bug Detection and Reporting, Top
@chapter Help
@include Help.texi

@node Command Line, Data Types and Structures, Help, Top
@chapter Command Line
@include Command.texi

@node Data Types and Structures, Expressions, Command Line, Top
@chapter Data Types and Structures
@include DataTypes.texi
@include Constants.texi
@include Lists.texi
@include Arrays.texi
@include defstruct.texi

@node Expressions, Operators, Data Types and Structures, Top
@chapter Expressions
@include Expressions.texi

@node Operators, Evaluation, Expressions, Top
@chapter Operators
@include Operators.texi

@node Evaluation, Simplification, Operators, Top
@chapter Evaluation
@include Evaluation.texi

@node Simplification, Mathematical Functions, Evaluation, Top
@chapter Simplification
@include Simplification.texi

@node Mathematical Functions, Maximas Database, Simplification, Top
@chapter Mathematical Functions
@include MathFunctions.texi

@node Maximas Database, Plotting, Mathematical Functions, Top
@chapter Maximas Database
@include Database.texi

@node Plotting, File Input and Output, Maximas Database, Top
@chapter Plotting
@include Plotting.texi

@node File Input and Output, Polynomials, Plotting, Top
@chapter File Input and Output
@include Input.texi

@node Polynomials, Special Functions, File Input and Output, Top
@chapter Polynomials
@include Polynomials.texi

@node Special Functions, Elliptic Functions, Polynomials, Top
@chapter Special Functions
@include Special.texi

@node Elliptic Functions, Limits, Special Functions, Top
@chapter Elliptic Functions
@include Elliptic.texi

@node Limits, Differentiation, Elliptic Functions, Top
@chapter Limits
@include Limits.texi

@node Differentiation, Integration, Limits, Top
@chapter Differentiation
@include Differentiation.texi

@node Integration, Equations, Differentiation, Top
@chapter Integration
@include Integration.texi

@node Equations, Differential Equations, Integration, Top
@chapter Equations
@include Equations.texi

@node Differential Equations, Numerical, Equations, Top
@chapter Differential Equations
@include Differential.texi

@c @include NonCommutative.texi

@node Numerical, Matrices and Linear Algebra, Differential Equations, Top
@chapter Numerical
@include Numerical.texi

@node Matrices and Linear Algebra, Affine, Numerical, Top
@chapter Matrices and Linear Algebra
@include Matrices.texi

@node Affine, itensor, Matrices and Linear Algebra, Top
@chapter Affine
@include Affine.texi

@node itensor, ctensor, Affine, Top
@chapter itensor
@include Itensor.texi

@node ctensor, atensor, itensor, Top
@chapter ctensor
@include Ctensor.texi

@node atensor, Sums Products and Series, ctensor, Top
@chapter atensor
@include Atensor.texi

@node Sums Products and Series, Number Theory, atensor, Top
@chapter Sums, Products, and Series
@include Series.texi

@node Number Theory, Symmetries, Sums Products and Series, Top
@chapter Number Theory
@include Number.texi

@node Symmetries, Groups, Number Theory, Top
@chapter Symmetries
@include Symmetries.texi

@node Groups, Runtime Environment, Symmetries, Top
@chapter Groups
@include Groups.texi

@node Runtime Environment, Miscellaneous Options, Groups, Top
@chapter Runtime Environment
@include Runtime.texi

@node Miscellaneous Options, Rules and Patterns, Runtime Environment, Top
@chapter Miscellaneous Options
@include Miscellaneous.texi

@node Rules and Patterns, Sets, Miscellaneous Options, Top
@chapter Rules and Patterns
@include Rules.texi

@node Sets, Function Definition, Rules and Patterns, Top
@chapter Sets
@include nset.texi

@node Function Definition, Program Flow, Sets, Top
@chapter Function Definition
@include Function.texi

@node Program Flow, Debugging, Function Definition, Top
@chapter Program Flow
@include Program.texi

@node Debugging, asympa, Program Flow, Top
@chapter Debugging
@include Debugging.texi

@node asympa, augmented_lagrangian, Debugging, Top
@chapter asympa
@include asympa.texi

@node augmented_lagrangian, Bernstein, asympa, Top
@chapter augmented_lagrangian
@include augmented_lagrangian.texi

@node Bernstein, bode, augmented_lagrangian, Top
@chapter Bernstein
@include bernstein.texi

@node bode, cobyla, Bernstein, Top
@chapter bode
@include bode.texi

@node cobyla, contrib_ode, bode, Top
@chapter cobyla
@include cobyla.texi

@node contrib_ode, descriptive, cobyla, Top
@chapter contrib_ode
@include contrib_ode.texi

@node descriptive, diag, contrib_ode, Top
@chapter descriptive
@include descriptive.texi

@node diag, distrib, descriptive, Top
@chapter diag
@include diag.texi

@node distrib, draw, diag, Top
@chapter distrib
@include distrib.texi

@node draw, drawdf, distrib, Top
@chapter draw
@include draw.texi

@node drawdf, dynamics, draw, Top
@chapter drawdf
@include drawdf.texi

@node dynamics, ezunits, drawdf, Top
@chapter dynamics
@include dynamics.texi

@node ezunits, f90, dynamics, Top
@chapter ezunits
@include ezunits.texi

@node f90, finance, ezunits, Top
@chapter f90
@include f90.texi

@node finance, fractals, f90, Top
@chapter finance
@include finance.texi

@node fractals, ggf, finance, Top
@chapter fractals
@include fractals.texi

@node ggf, graphs, fractals, Top
@chapter ggf
@include ggf.texi

@node graphs, grobner, ggf, Top
@chapter graphs
@include graphs.texi

@node grobner, impdiff, graphs, Top
@chapter grobner
@include grobner.texi

@node impdiff, interpol, grobner, Top
@chapter impdiff
@include impdiff.texi

@node interpol, lapack, impdiff, Top
@chapter interpol
@include interpol.texi

@node lapack, lbfgs, interpol, Top
@chapter lapack
@include lapack.texi

@node lbfgs, lindstedt, lapack, Top
@chapter lbfgs
@include lbfgs.texi

@node lindstedt, linearalgebra, lbfgs, Top
@chapter lindstedt
@include lindstedt.texi

@node linearalgebra, lsquares, lindstedt, Top
@chapter linearalgebra
@include linearalgebra.texi

@node lsquares, minpack, linearalgebra, Top
@chapter lsquares
@include lsquares.texi

@node minpack, makeOrders, lsquares, Top
@chapter minpack
@include minpack.texi

@node makeOrders, mnewton, minpack, Top
@chapter makeOrders
@include makeOrders.texi

@node mnewton, numericalio, makeOrders, Top
@chapter mnewton
@include mnewton.texi

@node numericalio, opsubst, mnewton, Top
@chapter numericalio
@include numericalio.texi

@node opsubst, orthopoly, numericalio, Top
@chapter opsubst
@include opsubst.texi

@node orthopoly, romberg, opsubst, Top
@chapter orthopoly
@include orthopoly.texi

@node romberg, simplex, orthopoly, Top
@chapter romberg
@include romberg.texi

@node simplex, simplification, romberg, Top
@chapter simplex
@include simplex.texi

@node simplification, solve_rec, simplex, Top
@chapter simplification
@include simplifications.texi

@node solve_rec, stats, simplification, Top
@chapter solve_rec
@include solve_rec.texi

@node stats, stirling, solve_rec, Top
@chapter stats
@include stats.texi

@node stirling, stringproc, stats, Top
@chapter stirling
@include stirling.texi

@node stringproc, to_poly_solve, stirling, Top
@chapter stringproc
@include stringproc.texi

@node to_poly_solve, unit, stringproc, Top
@chapter to_poly_solve
@include to_poly_solve.texi

@node unit, zeilberger, to_poly_solve, Top
@chapter unit
@include unit.texi

@node zeilberger, Function and Variable Index, unit, Top
@chapter zeilberger
@include zeilberger.texi

@node Function and Variable Index,  , zeilberger, Top
@chapter Indices
@include Indices.texi

@c end includes

