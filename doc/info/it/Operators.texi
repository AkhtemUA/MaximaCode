@menu
* nary::                        
* nofix::                       
* operator::                    
* postfix::                     
* prefix::                      
* Definitions for Operators::   
@end menu

@node nary, nofix, Operators, Operators
@section nary

@node nofix, operator, nary, Operators
@section nofix

@node operator, postfix, nofix, Operators
@section operator

@node postfix, prefix, operator, Operators
@section postfix

@node prefix, Definitions for Operators, postfix, Operators
@section prefix

@node Definitions for Operators,  , prefix, Operators
@section Definitions for Operators

@deffn {Operator} !
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Operator} !!
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Operator} #
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Operator} .
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Operator} :
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Operator} ::
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Operator} ::=
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Operator} :=
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Operator} =
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Operator} and
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Operator} or
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Operator} not
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} abs (@mvar{expr})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@defvr {Keyword} additive
THIS ITEM NEEDS TO BE TRANSLATED.
@end defvr

@defvr {Keyword} allbut
THIS ITEM NEEDS TO BE TRANSLATED.
@end defvr

@defvr {Declaration} antisymmetric
THIS ITEM NEEDS TO BE TRANSLATED.
@end defvr

@deffn {Function} cabs (@mvar{expr})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} ceiling (@mvar{x})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} charfun (@mvar{p})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@defvr {Declaration} commutative
THIS ITEM NEEDS TO BE TRANSLATED.
@end defvr

@deffn {Function} compare (@mvar{x}, @mvar{y})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} entier (@mvar{x})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} equal (@mvar{a}, @mvar{b})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} floor (@mvar{x})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} notequal (@mvar{a}, @mvar{b})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Operator} eval
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} evenp (@mvar{expr})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} fix (@mvar{x})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} fullmap (@mvar{f}, @mvar{expr_1}, ...)
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} fullmapl (@mvar{f}, @mvar{list_1}, ...)
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} is (@mvar{expr})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} maybe (@mvar{expr})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} isqrt (@mvar{x})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} lmax (@mvar{L})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} lmin (@mvar{L})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} max (@mvar{x_1}, ..., @mvar{x_n})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} min (@mvar{x_1}, ..., @mvar{x_n})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} polymod (@mvar{p})
@deffnx {Function} polymod (@mvar{p}, @mvar{m})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} mod (@mvar{x}, @mvar{y})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} oddp (@mvar{expr})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Operator} pred
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} make_random_state (@mvar{n})
@deffnx {Function} make_random_state (@mvar{s})
@deffnx {Function} make_random_state (true)
@deffnx {Function} make_random_state (false)
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} set_random_state (@mvar{s})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} random (@mvar{x})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} rationalize (@mvar{expr})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} sign (@mvar{expr})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} signum (@mvar{x})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} sort (@mvar{L}, @mvar{P})
@deffnx {Function} sort (@mvar{L})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} sqrt (@mvar{x})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@defvr {Option variable} sqrtdispflag
THIS ITEM NEEDS TO BE TRANSLATED.
@end defvr

@deffn {Function} sublis (@mvar{list}, @mvar{expr})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} sublist (@mvar{list}, @mvar{p})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@defvr {Option variable} sublis_apply_lambda
THIS ITEM NEEDS TO BE TRANSLATED.
@end defvr

@deffn {Function} subst (@mvar{a}, @mvar{b}, @mvar{c})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} substinpart (@mvar{x}, @mvar{expr}, @mvar{n_1}, ..., @mvar{n_k})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} substpart (@mvar{x}, @mvar{expr}, @mvar{n_1}, ..., @mvar{n_k})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} subvarp (@mvar{expr})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} symbolp (@mvar{expr})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} unorder ()
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} vectorpotential (@mvar{givencurl})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} xthru (@mvar{expr})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} zeroequiv (@mvar{expr}, @mvar{v})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

