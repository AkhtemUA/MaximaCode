@menu
* Introduction to linearalgebra::
* Definitions for linearalgebra::
@end menu

@node Introduction to linearalgebra, Definitions for linearalgebra, linearalgebra, linearalgebra
@section Introduction to linearalgebra

@node Definitions for linearalgebra,  , Introduction to linearalgebra, linearalgebra
@section Definitions for linearalgebra

@deffn {Function} addmatrices (@mvar{f}, @mvar{M_1}, ..., @mvar{M_n})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} blockmatrixp (@mvar{M})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} columnop (@mvar{M}, @mvar{i}, @mvar{j}, @mvar{theta})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} columnswap (@mvar{M}, @mvar{i}, @mvar{j})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} columnspace (@mvar{M})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} copy (@mvar{e})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} cholesky (@mvar{M})
@deffnx {Function} cholesky (@mvar{M}, @mvar{field})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} ctranspose (@mvar{M})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} diag_matrix (@mvar{d_1}, @mvar{d_2},...,@mvar{d_n})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} dotproduct (@mvar{u}, @mvar{v})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} get_lu_factors (@mvar{x}) 
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} hankel (@mvar{col})
@deffnx {Function} hankel (@mvar{col}, @mvar{row})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} hessian (@mvar{f},@mvar{vars})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} hilbert_matrix (@mvar{n})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} identfor (@mvar{M})
@deffnx {Function} identfor (@mvar{M}, @mvar{fld})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} invert_by_lu (@mvar{M}, @mvar{(rng generalring)})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} kronecker_product (@mvar{A}, @mvar{B})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} listp (@mvar{e}, @mvar{p})
@deffnx {Function} listp (@mvar{e})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} locate_matrix_entry (@mvar{M}, @mvar{r_1}, @mvar{c_1}, @mvar{r_2}, @mvar{c_2}, @mvar{f}, @mvar{rel})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} lu_backsub (@mvar{M}, @mvar{b})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} lu_factor (@mvar{M}, @mvar{field})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} mat_cond (@mvar{M}, 1)
@deffnx {Function} mat_cond (@mvar{M}, inf)
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} mat_norm (@mvar{M}, 1)
@deffnx {Function} mat_norm (@mvar{M}, inf)
@deffnx {Function} mat_norm (@mvar{M}, frobenius)
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} matrixp (@mvar{e}, @mvar{p})
@deffnx {Function} matrixp (@mvar{e})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} matrix_size (@mvar{M})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} mat_fullunblocker (@mvar{M})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} mat_trace (@mvar{M})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} mat_unblocker (@mvar{M})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} nonnegintegerp (@mvar{n})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} nullspace (@mvar{M})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} nullity (@mvar{M})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} orthogonal_complement (@mvar{v_1}, ..., @mvar{v_n})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} polynomialp (@mvar{p}, @mvar{L}, @mvar{coeffp}, @mvar{exponp})
@deffnx {Function} polynomialp (@mvar{p}, @mvar{L}, @mvar{coeffp})
@deffnx {Function} polynomialp (@mvar{p}, @mvar{L})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} polytocompanion (@mvar{p}, @mvar{x})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} ptriangularize (@mvar{M}, @mvar{v})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} rowop (@mvar{M}, @mvar{i}, @mvar{j}, @mvar{theta})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} rank (@mvar{M})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} rowswap (@mvar{M}, @mvar{i}, @mvar{j})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} toeplitz (@mvar{col})
@deffnx {Function} toeplitz (@mvar{col}, @mvar{row})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} vandermonde_matrix ([@mvar{x_1}, ..., @mvar{x_n}])
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} zerofor (@mvar{M})
@deffnx {Function}  zerofor (@mvar{M}, @mvar{fld})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

@deffn {Function} zeromatrixp (@mvar{M})
THIS ITEM NEEDS TO BE TRANSLATED.
@end deffn

